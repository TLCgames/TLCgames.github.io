:root {
    --boardCircleHeight: 4vh;
    --boardCircleWidth: 4vw;
    --neutral: darkgreen;
    --player1: darkblue;
    --player2: darkred;
}

* {
    border: 1px solid darkolivegreen;
}

gameArea {
    display: grid;
    grid-template-columns: minmax(50px, 1fr) minmax(200px, 4fr) minmax(50px, 1fr);
    grid-template-rows: minmax(50px, 15vh) minmax(300px, 60vh) minmax(50px, max(80px, 10vh));
    grid-template-areas: 
        "leftHeader header rightHeader"
        "leftPanel board rightPanel"
        "leftFooter footer rightFooter";
    text-align: center;
}

board {
    display: grid;
    grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
    background: linear-gradient(to bottom right, rgb(255, 255, 255) 15%, transparent 15%, transparent 85%, rgb(255, 255, 255) 85%),
    linear-gradient(to top right, rgb(255, 255, 255) 15%, transparent 15%, transparent 85%, rgb(255, 255, 255) 85%),
    linear-gradient(to top right, rgba(255,255,255,0) 49.3%, darkgoldenrod 49.5%, darkgoldenrod 50.5%, rgba(255,255,255,0) 50.7%),
    linear-gradient(to bottom right, rgba(255,255,255,0) 49.3%, darkgoldenrod 49.5%, darkgoldenrod 50.5%, rgba(255,255,255,0) 50.7%);
}


#slot1, #slot2, #slot3, #slot4, #slot5, #slot6, #slot7, #slot8, #slot9 {
    position: relative;
    top: calc(50% - (var(--boardCircleHeight) + var(--boardCircleWidth))/2);
    left: calc(50% - (var(--boardCircleHeight) + var(--boardCircleWidth))/2);
    width: calc(var(--boardCircleHeight) + var(--boardCircleWidth));
    height: calc(var(--boardCircleHeight) + var(--boardCircleWidth));
    background-color: var(--neutral);
    border-radius: 50%;
}

/* Horizontal connector lines */
#slot1::after,#slot4::after,#slot7::after {
    content: "";
    position: absolute;
    left: var(--boardCircleWidth);
    top: calc(50% - 0.5vh);
    width: calc(var(--boardCircleWidth) * 11);
    height: 1vh;
    background-color: darkgoldenrod;
    z-index: -1;
}

/* Vertical connector lines */
#slot7::before, #slot8::before, #slot9::before {
    content: "";
    position: absolute;
    left: calc((var(--boardCircleHeight) + var(--boardCircleWidth)) / 2 - 0.25vw);
    top: -36vh;
    height: calc(var(--boardCircleHeight) * 10);
    width: 1vh;
    background-color: darkgoldenrod;
    z-index: -1;
}

/* Diagonal connectors */
/* #slot4::before {
    content: "";
    position: absolute;
    left: calc(var(--boardCircleWidth) * -0.2);
    top: calc(50% - 0.5vh);
    width: calc(var(--boardCircleWidth) * 13.5);
    height: 1vh;
    background-color: darkgoldenrod;
    z-index: -1;
    transform-origin: center;
    transform: rotate(34deg);
}
#slot6::before {
    content: "";
    position: absolute;
    left: calc(var(--boardCircleWidth) * -11.25);
    top: calc(50% + 0.2vh);
    width: calc(var(--boardCircleWidth) * 13.5);
    height: 1vh;
    background-color: darkgoldenrod;
    z-index: -1;
    transform-origin: center;
    transform: rotate(-34deg);
} */


li:nth-child(2n) {
    font-weight: 600;
}

li:nth-child(2n-1) {
    font-style: italic;
}

leftHeader {
    grid-area: leftHeader;
}

header {
    grid-area: header;
}

rightHeader {
    grid-area: rightHeader;
}

left {
    grid-area: leftPanel;
}

board {
    grid-area: board;
}

right {
    grid-area: rightPanel;
}

leftFooter {
    grid-area: leftFooter;
}

footer {
    grid-area: footer;
}

rightFooter {
    grid-area: rightFooter;
}